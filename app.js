angular.module("search",[]),angular.module("cards",["textarea-fit","LocalStorageModule","angular-nsv-stringformat","search"]),angular.module("angular-nsv-tagsearch",[]),angular.module("cards").directive("ccCard",["$timeout",function(a){return{restrict:"E",scope:{card:"=ccCardModel",isEditModeActive:"=?",onSave:"&"},templateUrl:"views/modules/cards/cardView.html",transclude:!0,link:function(b,c){function d(){b.isEditModeActive=!1,b.card.setModificationDate(),b.card.save(),b.onSave(b.card),b.$apply()}var e=c.find(".card-editor");b.isEditModeActive=_.get(b,"isEditModeActive",!1),b.deleteCard=function(){c.fadeOut(function(){b.card.remove()})},b.activateEditor=function(){return b.isEditModeActive=!0,a(e.focus.bind(e)),!1},e.on("focusout",d),e.on("keydown",function(a){a.ctrlKey&&13===a.keyCode&&d()})}}}]),angular.module("cards").factory("CardModel",function(){function a(){var a;this.id=void 0,this.content="",this.cdate=new Date,this.mdate=new Date,this.setManager=function(b){return a=b,this},this.save=function(){return angular.isObject(a)&&angular.isFunction(a.save)&&a.save(this),this},this.remove=function(){return angular.isObject(a)&&angular.isFunction(a.remove)&&a.remove(this),this.content="",this.setModificationDate(),this},this.setModificationDate=function(a){return angular.isDate(a)?this.mdate=a:this.mdate=new Date,this}}return a}),angular.module("cards").service("CardsService",["$window","$rootScope","CardModel","localStorageService",function(a,b,c,d){function e(){d.set(f,thisService.getAll())}var f="cards.allCards",g={},h=d.get(f),i=0;thisService=this,this.getAll=function(){var a=[];return angular.forEach(g,function(b){a.push(b)}),a},this.getByIds=function(a){var b=[];return angular.isArray(a)||(a=[a]),angular.forEach(a,function(a){g.hasOwnProperty(a)&&b.push(g[a])}),b},this.add=function(a){var b=a instanceof c?a:new c;return b.setManager(this),angular.isUndefined(b.id)&&(b.id=this.getNextId()),g[b.id]=b,this.save(),b},this.save=function(){return e(),this},this.remove=function(a){return delete g[a.id],e(),this},this.convertArray=function(a){var b={};return angular.forEach(a,function(a){var c=thisService.createCardFromData(a);b[c.id]=c}),b},this.createCardFromData=function(a){var b=new c;return angular.isString(a.content)&&(b.content=a.content),angular.isString(a.cdate)&&(b.cdate=new Date(a.cdate)),angular.isString(a.mdate)&&(b.mdate=new Date(a.mdate)),thisService.add(b),b},this.getNextId=function(){return i++},angular.isArray(h)&&(g=this.convertArray(h)),b.$on("$destroy",e)}]),angular.module("cards").directive("ccNewCard",["$timeout","CardModel",function(a,b){return{restrict:"E",scope:{addCard:"&"},templateUrl:"views/modules/cards/newCardView.html",link:function(c,d){var e=d.find("[data-card]");c.editNewCard=!1,c.newCard=new b,c.activateEditor=function(){c.editNewCard=!0,a(function(){e.find(".card-editor").focus()})},c.saveCard=function(){c.newCard.content.length>0&&(c.addCard({card:c.newCard}),c.newCard=new b),c.editNewCard=!1}}}}]),angular.module("search").directive("containsTags",["$filter",function(a){var b=a("tags");return{require:"^linkableTags",link:function(a,c,d,e){var f="",g=function(){c.html(b(c.html())),c.find("tag").on("click",function(b){return e.onClick($(this).data("tag")),a.$apply(),!1}),f=c.html()};a.$watch(function(){return c.html()},function(a){a!==f&&g()})}}}]),angular.module("search").directive("linkableTags",["$parse",function(a){return{controller:["$scope","$element","$attrs",function(b,c,d){this.onClick=function(c){a(d.onTagClick)(b.$parent,{tag:c})}}]}}]),angular.module("search").service("search.SearchService",["search.TagService",function(a){var b=this,c={};this.indexText=function(b,d){return angular.forEach(a.extractTagsFromText(d),function(a){_.has(c,a)&&angular.isArray(c[a])?_.includes(c[a],b)||c[a].push(b):c[a]=[b]}),this},this.getIdsForTag=function(a){return angular.isArray(c[a])?c[a]:[]},this.getIdsForTags=function(a){var c=null;return angular.forEach(a,function(a){a=a.toLowerCase(),c=angular.isArray(c)?_.intersection(c,b.getIdsForTag(a)):b.getIdsForTag(a)}),c},this.getAllTags=function(){return _.keys(c)}}]),angular.module("search").service("search.TagService",[function(){this.tagRegEx=/\B#[a-z\u00E4\u00F6\u00FC\u00DF\u00E9\u00E8]+/gi,this.extractTagsFromText=function(a){var b=a.match(this.tagRegEx),c=[];return angular.forEach(b,function(a){a=a.slice(1).toLowerCase(),_.includes(c,a)||c.push(a)}),c}}]),angular.module("search").filter("tags",["search.TagService",function(a){return function(b){return b.replace(a.tagRegEx,'<tag class="tag" data-tag="$&">$&</tag>')}}]),angular.module("angular-nsv-tagsearch").directive("keyselectContainer",["$parse","$filter",function(a,b){return{controller:["$scope","$element",function(a,b){var c=-1,d=function(){return[]},e="";this.reset=function(){return c=-1,this},this.getSelectedIndex=function(){return c},this.incSelectedIndex=function(){return c++,c>=d().length&&(c=-1),this},this.decSelectedIndex=function(){return c--,-1>c&&(c=d().length-1),this},this.getSelection=function(){return c>-1?d()[c]:null},this.registerListGetter=function(a){d=a},this.setSearchText=function(a){return e=a,this},this.getSearchText=function(){return e}}]}}]),angular.module("angular-nsv-tagsearch").directive("suggestionList",["$filter",function(a){var b=a("filter");return{require:["^tagsearch","^keyselectContainer"],templateUrl:"views/modules/tagsearch/suggestionListView.html",scope:{items:"=",blacklist:"="},link:function(a,c,d,e){var f=e[0],g=e[1];a.suggestions=[],g.registerListGetter(function(){return a.suggestions});var h=function(c){var d=a.suggestions.length;return a.suggestions=b(a.items,c),a.suggestions.length!==d&&a.selectedIndex>=a.suggestions.length&&(a.selectedIndex=a.suggestions.length-1),angular.isArray(a.blacklist)&&(a.suggestions=a.suggestions.filter(function(b){return-1===a.blacklist.indexOf(b)})),a.suggestions};a.$watch(function(){return g.getSearchText()},h),a.$watchCollection("blacklist",h),a.selectedIndex=g.getSelectedIndex(),a.$watch(function(){return g.getSelectedIndex()},function(b){a.selectedIndex=b}),a.selectTag=function(a,b){b.stopPropagation(),b.preventDefault(),f.addTag(a),g.reset()}}}}]),angular.module("angular-nsv-tagsearch").directive("tagsearch",function(){return{restrict:"EA",templateUrl:"views/modules/tagsearch/tagsearchView.html",scope:{allTags:"=",selectedTags:"=",onTaglistChange:"&"},controller:["$scope",function(a){var b=this;angular.isArray(a.selectedTags)||(a.selectedTags=[]),a.hasFocus=!1,b.removeTag=function(b,c){c.stopPropagation();var d=a.selectedTags.splice(b,1);return a.$broadcast("taglist-changed-remove"),a.onTaglistChange(),d},b.removeLast=function(){var b=a.selectedTags.pop();return a.$broadcast("taglist-changed-remove"),a.onTaglistChange(),b},b.addTag=function(b){return b=(""+b).replace(/^#/,"").replace(/ /,""),b.length>0&&-1===a.selectedTags.indexOf(b)&&a.selectedTags.push(b),a.$broadcast("taglist-changed-add"),a.onTaglistChange(),a.selectedTags},b.setFocus=function(){a.hasFocus=!0},b.removeFocus=function(){a.hasFocus=!1}}],link:function(a,b,c,d){a.removeTag=d.removeTag,a.addTag=d.addTag,a.checkInput=d.checkInput}}}),angular.module("angular-nsv-tagsearch").directive("tagsearchInput",function(){var a=["font-size","font-family","margin","padding","min-width"],b=function(b,c){var d={};angular.forEach(a,function(a){d[a]=b.css(a)}),c.css(d)};return{restrict:"EA",require:["^tagsearch","^keyselectContainer"],scope:!0,link:function(a,c,d,e){var f=angular.element("<div>"),g=function(){b(c,f),f.text(a.searchText),c.width(f.width()+3)},h=e[0],i=e[1];f.hide().appendTo(c.parent()),a.searchText="",c.parents("tagsearch,[tagsearch],[data-tagsearch]").on("click",function(){c.focus()}),c.on("focus",function(){h.setFocus(),i.reset(),a.$apply()}),c.on("blur",function(){h.removeFocus(),a.$apply()}),a.$watch("searchText",function(a){g(),i.setSearchText(a)}),c.on("keydown",function(b){switch(b.which){case 40:i.incSelectedIndex(),a.$apply();break;case 38:i.decSelectedIndex(),a.$apply();break;case 13:i.getSelectedIndex()>-1&&(a.searchText=i.getSelection(),i.reset()),h.addTag(a.searchText),a.searchText="",a.$apply();break;case 8:0===a.searchText.length&&(a.searchText=h.removeLast(),a.$apply())}}),a.checkInput=function(){var b=a.searchText.match(/(.*)\s$/);angular.isArray(b)&&(h.addTag(b[1]),a.searchText="")},a.$on("taglist-changed-add",function(){a.searchText=""})}}}),angular.module("cabocabo",["ngRoute","cards","angular-nsv-tagsearch"]),angular.module("cabocabo").config(["$routeProvider",function(a){a.when("/",{controller:"MainCtrl",templateUrl:"views/controller/mainView.html",reloadOnSearch:!1})}]),angular.module("cabocabo").controller("MainCtrl",["$log","$scope","$routeParams","$location","CardsService","search.SearchService",function(a,b,c,d,e,f){function g(a){b.$watch(function(){return a.content},_.partial(h,a))}function h(a){f.indexText(a.id,a.content)}b.cardList=e.getAll(),b.selectedTags=[],b.allTags=f.getAllTags(),b.addCard=function(a){e.add(a),g(a),b.search()},b.searchForTag=function(a){a=(""+a).replace(/^#/,"").replace(/ /,""),_.includes(b.selectedTags,a)||b.selectedTags.push(a),b.search()},b.search=function(){if(d.search("tags",b.selectedTags.join(" ")),angular.isArray(b.selectedTags)&&b.selectedTags.length>0){var a=f.getIdsForTags(b.selectedTags);b.cardList=e.getByIds(a)}else b.cardList=e.getAll()},b.$watch(function(){return f.getAllTags().length},function(){b.allTags=f.getAllTags()}),angular.forEach(e.getAll(),h),angular.isString(c.tags)&&(b.selectedTags=_(c.tags.split(" ")).uniq().filter(_.negate(_.isEmpty)).value()),b.search()}]);